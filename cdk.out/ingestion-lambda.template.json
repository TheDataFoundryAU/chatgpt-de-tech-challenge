{
 "Resources": {
  "IngestionBucket917A3A3A": {
   "Type": "AWS::S3::Bucket",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ingestion-lambda/IngestionBucket/Resource"
   }
  },
  "lambdaroleDFE21467": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ingestion-lambda/lambda-role/Resource"
   }
  },
  "lambdaroleDefaultPolicyB1623966": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "IngestionBucket917A3A3A",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "lambdaroleDefaultPolicyB1623966",
    "Roles": [
     {
      "Ref": "lambdaroleDFE21467"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ingestion-lambda/lambda-role/DefaultPolicy/Resource"
   }
  },
  "LambdaLayerCA94B5F7": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "5d29e3c6e524afb6ccd48978d51abf5efc27f6109e403c078d6905c5db4ccf0a.zip"
    },
    "CompatibleRuntimes": [
     "python3.8"
    ],
    "Description": "Layer for pandas and pyarrow libraries"
   },
   "Metadata": {
    "aws:cdk:path": "ingestion-lambda/LambdaLayer/Resource",
    "aws:asset:path": "asset.5d29e3c6e524afb6ccd48978d51abf5efc27f6109e403c078d6905c5db4ccf0a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "IngestionLambdaEF25F265": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "232e22fc480808935f6fa000e0a600de4fec99e3113cead4ca1dcf0958078b31.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "lambdaroleDFE21467",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "IngestionBucket917A3A3A"
      },
      "WEATHER_API_URL": "https://api.open-meteo.com/v1/forecast",
      "LATITUDE": "<your-latitude>",
      "LONGITUDE": "<your-longitude>"
     }
    },
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "LambdaLayerCA94B5F7"
     }
    ],
    "Runtime": "python3.8"
   },
   "DependsOn": [
    "lambdaroleDefaultPolicyB1623966",
    "lambdaroleDFE21467"
   ],
   "Metadata": {
    "aws:cdk:path": "ingestion-lambda/IngestionLambda/Resource",
    "aws:asset:path": "asset.232e22fc480808935f6fa000e0a600de4fec99e3113cead4ca1dcf0958078b31",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "Rule4C995B7F": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(5 minutes)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "IngestionLambdaEF25F265",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ingestion-lambda/Rule/Resource"
   }
  },
  "RuleAllowEventRuleingestionlambdaIngestionLambda3447FF938C5B94E4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "IngestionLambdaEF25F265",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "Rule4C995B7F",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ingestion-lambda/Rule/AllowEventRuleingestionlambdaIngestionLambda3447FF93"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WPwarCMBBFv8V9Osrrwm5VeKu3KBXcSkxHndc2gUyilJB/N2kr6OrcO2eYkB+oNrBZyScXqu2Kni4Qjk6qTqTROXAJYe9Vh04crnpJM/aSMQqSA4TG9Jj9xNr0pMZc5xRFL4dLKyH8yRHtCS2T0dl/9V+vlVvEZ67RDsR5JQouz5IZHcMuQ+ADdSqh8cv7iTGKBtl4q1BMW+k3N9K3yb9FygejW3LT2Xp0d6PXJVSwXf0zUWG9djQgNDNfxl+t3SUBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "ingestion-lambda/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}